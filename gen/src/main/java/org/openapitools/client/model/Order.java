/*
 * Delivery API
 * API para manejar pedidos y entrega de platos de un restaurant
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OrderDireccion;
import org.openapitools.client.model.OrderPlatos;

/**
 * Order
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-29T15:39:30.858963100-04:00[America/La_Paz]")
public class Order {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CLIENTE_ID = "clienteId";
  @SerializedName(SERIALIZED_NAME_CLIENTE_ID)
  private Integer clienteId;

  public static final String SERIALIZED_NAME_SUCURSAL = "sucursal";
  @SerializedName(SERIALIZED_NAME_SUCURSAL)
  private String sucursal;

  public static final String SERIALIZED_NAME_FECHA = "fecha";
  @SerializedName(SERIALIZED_NAME_FECHA)
  private String fecha;

  public static final String SERIALIZED_NAME_DIRECCION = "direccion";
  @SerializedName(SERIALIZED_NAME_DIRECCION)
  private OrderDireccion direccion;

  /**
   * Gets or Sets metodoPago
   */
  @JsonAdapter(MetodoPagoEnum.Adapter.class)
  public enum MetodoPagoEnum {
    EFECTIVO("Efectivo"),
    
    TARJETA("Tarjeta"),
    
    QR("Qr");

    private String value;

    MetodoPagoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MetodoPagoEnum fromValue(String value) {
      for (MetodoPagoEnum b : MetodoPagoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MetodoPagoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MetodoPagoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MetodoPagoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MetodoPagoEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_METODO_PAGO = "metodoPago";
  @SerializedName(SERIALIZED_NAME_METODO_PAGO)
  private MetodoPagoEnum metodoPago;

  /**
   * Gets or Sets delivery
   */
  @JsonAdapter(DeliveryEnum.Adapter.class)
  public enum DeliveryEnum {
    DELIVERY("Delivery"),
    
    ENTREGA_EN_LOCAL("Entrega en local");

    private String value;

    DeliveryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeliveryEnum fromValue(String value) {
      for (DeliveryEnum b : DeliveryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DeliveryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeliveryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeliveryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DeliveryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DELIVERY = "delivery";
  @SerializedName(SERIALIZED_NAME_DELIVERY)
  private DeliveryEnum delivery;

  /**
   * Gets or Sets estado
   */
  @JsonAdapter(EstadoEnum.Adapter.class)
  public enum EstadoEnum {
    ENVIADO("Enviado"),
    
    APROBADO("Aprobado"),
    
    RECHAZADO("Rechazado"),
    
    EN_CAMINO("En camino"),
    
    ENTREGADO("Entregado");

    private String value;

    EstadoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EstadoEnum fromValue(String value) {
      for (EstadoEnum b : EstadoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EstadoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EstadoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EstadoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EstadoEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ESTADO = "estado";
  @SerializedName(SERIALIZED_NAME_ESTADO)
  private EstadoEnum estado;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public static final String SERIALIZED_NAME_PLATOS = "platos";
  @SerializedName(SERIALIZED_NAME_PLATOS)
  private List<OrderPlatos> platos = null;


  public Order id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30", value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Order clienteId(Integer clienteId) {
    
    this.clienteId = clienteId;
    return this;
  }

   /**
   * Get clienteId
   * @return clienteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13", value = "")

  public Integer getClienteId() {
    return clienteId;
  }


  public void setClienteId(Integer clienteId) {
    this.clienteId = clienteId;
  }


  public Order sucursal(String sucursal) {
    
    this.sucursal = sucursal;
    return this;
  }

   /**
   * Get sucursal
   * @return sucursal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sucursal Obrajes", value = "")

  public String getSucursal() {
    return sucursal;
  }


  public void setSucursal(String sucursal) {
    this.sucursal = sucursal;
  }


  public Order fecha(String fecha) {
    
    this.fecha = fecha;
    return this;
  }

   /**
   * Get fecha
   * @return fecha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11/5/2022, 16:35", value = "")

  public String getFecha() {
    return fecha;
  }


  public void setFecha(String fecha) {
    this.fecha = fecha;
  }


  public Order direccion(OrderDireccion direccion) {
    
    this.direccion = direccion;
    return this;
  }

   /**
   * Get direccion
   * @return direccion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrderDireccion getDireccion() {
    return direccion;
  }


  public void setDireccion(OrderDireccion direccion) {
    this.direccion = direccion;
  }


  public Order metodoPago(MetodoPagoEnum metodoPago) {
    
    this.metodoPago = metodoPago;
    return this;
  }

   /**
   * Get metodoPago
   * @return metodoPago
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Efectivo", value = "")

  public MetodoPagoEnum getMetodoPago() {
    return metodoPago;
  }


  public void setMetodoPago(MetodoPagoEnum metodoPago) {
    this.metodoPago = metodoPago;
  }


  public Order delivery(DeliveryEnum delivery) {
    
    this.delivery = delivery;
    return this;
  }

   /**
   * Get delivery
   * @return delivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Delivery", value = "")

  public DeliveryEnum getDelivery() {
    return delivery;
  }


  public void setDelivery(DeliveryEnum delivery) {
    this.delivery = delivery;
  }


  public Order estado(EstadoEnum estado) {
    
    this.estado = estado;
    return this;
  }

   /**
   * Get estado
   * @return estado
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Enviado", value = "")

  public EstadoEnum getEstado() {
    return estado;
  }


  public void setEstado(EstadoEnum estado) {
    this.estado = estado;
  }


  public Order total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "150.0", value = "")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  public Order platos(List<OrderPlatos> platos) {
    
    this.platos = platos;
    return this;
  }

  public Order addPlatosItem(OrderPlatos platosItem) {
    if (this.platos == null) {
      this.platos = new ArrayList<OrderPlatos>();
    }
    this.platos.add(platosItem);
    return this;
  }

   /**
   * Get platos
   * @return platos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OrderPlatos> getPlatos() {
    return platos;
  }


  public void setPlatos(List<OrderPlatos> platos) {
    this.platos = platos;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.id, order.id) &&
        Objects.equals(this.clienteId, order.clienteId) &&
        Objects.equals(this.sucursal, order.sucursal) &&
        Objects.equals(this.fecha, order.fecha) &&
        Objects.equals(this.direccion, order.direccion) &&
        Objects.equals(this.metodoPago, order.metodoPago) &&
        Objects.equals(this.delivery, order.delivery) &&
        Objects.equals(this.estado, order.estado) &&
        Objects.equals(this.total, order.total) &&
        Objects.equals(this.platos, order.platos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, clienteId, sucursal, fecha, direccion, metodoPago, delivery, estado, total, platos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    clienteId: ").append(toIndentedString(clienteId)).append("\n");
    sb.append("    sucursal: ").append(toIndentedString(sucursal)).append("\n");
    sb.append("    fecha: ").append(toIndentedString(fecha)).append("\n");
    sb.append("    direccion: ").append(toIndentedString(direccion)).append("\n");
    sb.append("    metodoPago: ").append(toIndentedString(metodoPago)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    estado: ").append(toIndentedString(estado)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    platos: ").append(toIndentedString(platos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

