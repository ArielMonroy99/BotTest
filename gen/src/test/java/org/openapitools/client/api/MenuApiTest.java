/*
 * Delivery API
 * API para manejar pedidos y entrega de platos de un restaurant
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MenuApi
 */
@Ignore
public class MenuApiTest {

    private final MenuApi api = new MenuApi();

    
    /**
     * Obtener las categorias del Menu
     *
     * Obtener la lista de categorias que tiene el restaurante
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuCategoriesGetTest() throws ApiException {
        List<Object> response = api.menuCategoriesGet();

        // TODO: test validations
    }
    
    /**
     * Obtener los postrs mas populares
     *
     * Obtener una lista de los postres populares del restaurante
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuDessertpopularGetTest() throws ApiException {
        List<Object> response = api.menuDessertpopularGet();

        // TODO: test validations
    }
    
    /**
     * Todos los postres que ofrece el restaurante
     *
     * Obtener una lista de todos los postres que ofrece el restaurante
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuDessertsGetTest() throws ApiException {
        List<Object> response = api.menuDessertsGet();

        // TODO: test validations
    }
    
    /**
     * Obtener los platos principales mas populares
     *
     * Obtener una lista de los platos principales populares del restaurante
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuMainPopularGetTest() throws ApiException {
        List<Object> response = api.menuMainPopularGet();

        // TODO: test validations
    }
    
    /**
     * Todos los platos principales que ofrece el restaurante
     *
     * Obtener una lista de todos los platos principales que ofrece el restaurante
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuMaindishesGetTest() throws ApiException {
        List<Object> response = api.menuMaindishesGet();

        // TODO: test validations
    }
    
    /**
     * Obtener la informacion de un plato
     *
     * Obtener la informacion de un plato
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuPlateIdGetTest() throws ApiException {
        String plateId = null;
        List<Object> response = api.menuPlateIdGet(plateId);

        // TODO: test validations
    }
    
    /**
     * Todas las sopas que ofrece el restaurante
     *
     * Obtener una lista de todas las sopas
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void menuSoupsGetTest() throws ApiException {
        List<Object> response = api.menuSoupsGet();

        // TODO: test validations
    }
    
}
