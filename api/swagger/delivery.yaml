swagger: '2.0'
info:
  title: Delivery API
  description: API para manejar pedidos y entrega de platos de un restaurant
  version: 1.0.0
tags:
  - name: "Menu"
    description: "Visualizacion de categorias y menus"
  - name: "Plato"
    description: "Agregar, eliminar y editar platos"
  - name: "Pedidos"
    description: "todo sobre los pedidos"
  - name: "Cliente"
    description: "Informacion necesaria sobre el cliente"
  - name: "Orden"
    description: "Realizar pedido"
paths:
  "/menu/categories":
    get:
      tags:
        - "Menu"
      summary: "Obtener las categorias del Menu"
      description: "Obtener la lista de categorias que tiene el restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de categorias del restaurante"
          schema:
            $ref: '#/definitions/categories'
        404:
          description: No se encuentra la lista de categorias
      produces:
        - application/json

  "/menu/mainPopular":
    get:
      tags:
        - "Menu"
      summary: "Obtener los platos principales mas populares"
      description: "Obtener una lista de los platos principales populares del restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de platos principales mas populares"
          schema:
            $ref: '#/definitions/PopularMainDishes'
        404:
          description: No se encuentra la lista de platos princiaples populares
      produces:
        - application/json
  "/menu/dessertpopular":
    get:
      tags:
        - "Menu"
      summary: "Obtener los postrs mas populares"
      description: "Obtener una lista de los postres populares del restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de los postres mas populares"
          schema:
            $ref: '#/definitions/dessertpopular'
        404:
          description: No se encuentra la lista de postres populares
      produces:
        - application/json

  "/plato/{plateId}":
    get:
      tags:
      - "Orden"
      summary: "Obtener la informacion del plato"
      description: "Obtener la informacion del plato selecionado"
      parameters: 
      - name: plateId
        in: path
        description: "Obtener datos del plato"
        required: true
        type: string
      responses:
        200:
          schema:
            $ref: '#/definitions/plate'
          description: "Informacion del Plato"
        404:
          description: "No se encuentra el plato"
      produces:
        - application/json
  "/order/{clientId}/Order":
    post:
      tags:
      - "Orden"
      summary: "Enviar la orden al listado"
      description: "Enviar la orden al listado"
      parameters:
      - name: clientId
        in: path
        description: Referencia de cliente
        required: true
        type: string
      - name: body 
        in: body
        schema:
          $ref: '#/definitions/order'
      responses:
        200:
          description: Se envio la orden 
        400:
          description: Error al enviar la orden
      produces:
        - application/json  
  
  /orders:
    post:
      tags:
        - "Pedidos"
      summary: Crea un nuevo pedido
      description: |
        Crea en nuevo pedido
      parameters:
        - name: body
          in: body
          description: "Pedido que se añadira al servicio"
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        200:
          description: Se creo el nuevo pedido satisfactoriamente
        400:
          description: Error al crear el nuevo pedido
      produces:
        - application/json
      consumes:
        - application/json
        
  /client/{clientId}/orders:

    ### Informacion del usuario
    get:
      tags:
        - "Cliente"
      summary: Obtener pedidos del cliente
      description: |
        Obtener la lista de pedidos hechos por el cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
      responses:
        200:
          description: Lista de pedidos
          schema:
            $ref: '#/definitions/OrderList'
        404:
          description: El usuario no tiene pedidos anteriores
      produces:
        - application/json

  /orders/{orderId}:
    get:
      tags:
        - "Pedidos"
      summary: Obtener pedido por id
      description: |
        Obtener la informacion de un pedido por el id
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Informacion del pedido
          schema:
            $ref: '#/definitions/Order'
        404:
          description: No se encontro el pedido
        ### Informacion de un pedido

  /client/{clientId}:
    put:
      tags:
        - "Cliente"
      summary: Actualizar informacion del cliente
      description: |
        Actualiza la informacion del cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
        - name: body
          in: body
          description: En body se envia la informacion
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        200:
          description: Se guardaron satisfactoriamente los cambios
        400:
          description: Error al actualizar la informacion
        404:
          description: No se encontro al usuario
      consumes:
        - application/json

    get:
      responses:
        200:
          description: Se Obtienen datos del cliente
          schema:
            $ref: '#/definitions/Client'
        400:
          description: Error al obtener datos
        404:
          description: Cliente no encontrado
      tags:
        - "Cliente"
      summary: Obtener informacion del cliente
      description: |
          Actualiza la informacion del cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
  /client/{clientId}/location:
    get:
      tags: 
      - "Cliente"
      summary: Obtener las direcciones agregados del cliente
      description: |
        Obtiene todos las direcciones registrados del cliente
      parameters:
      - name: clientId
        in: path 
        description: Referencia al usuario
        required: true
        type: integer
      responses:
        200: 
          description: Direcciones registradas
          schema: 
            $ref: '#/definitions/Locations'
        400: 
          description: Error al obtener informacion de direcciones
        404: 
          description: No se encontraron direcciones


  /client/{clientId}/payments:
    get:
      tags:
        - "Cliente"
      summary: Obtener los metodos de pago agregados del cliente
      description: |
        Obtiene todos los metodos de pagos registrados del cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia al usuario
          required: true
          type: integer
      responses:
        200:
          description: Metodos de pago
          schema:
            $ref: '#/definitions/PaymentMethods'
        400:
          description: Error al obtener metodos de pago
        404:
          description: No se encontraron metodos de pago
  /plate:

    post:
      tags:
        - "Plato"

      summary: Crea un nuevo plato
      description: |
        Crea en nuevo pedido
      parameters:
        - name: body
          in: body
          description: "Plato que se añadira al manu"
          required: true
          schema:
            $ref: '#/definitions/Plate'
      responses:
        200:
          description: Se creo el nuevo plato satisfactoriamente
        400:
          description: Error al crear el nuevo plato
      produces:
        - application/json
      consumes:
        - application/json

  /plate/{plateId}:

    get:
      tags:
        - "Plato"
      summary: Obtener la informacion del plato
      description: |
        Obtiene todos los datos registrados del plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
      responses:
        200:
          description: Informacion del plato
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Error al obtener la informacion del plato
        404:
          description: No se encontraron datos del plato

    put:
      tags:
        - "Plato"
      summary: Actualizar informacion del plato
      description: |
        Actualiza los datos del plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
        - name: body
          in: body
          description: En body se envia la informacion
          schema:
            $ref: '#/definitions/Plate'
          required: true
      responses:
        200:
          description: Se guardaron satisfactoriamente los cambios
        400:
          description: Error al actualizar la informacion del plato
      consumes:
        - application/json

    delete:
      tags:
        - "Plato"
      summary: Eliminar plato
      description: |
        Elimina el plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
        - name: body
          in: body
          description: En body se envia la informacion
          schema:
            $ref: '#/definitions/Plate'
          required: true
      responses:
        200:
          description: Se elimino con exito
        400:
          description: Error al eliminar el plato
      consumes:
        - application/json



definitions:
  categories:
    type: array
    items:
      type: object
      properties:
        categoriesId:
          type: integer
          example: 3
        name:
          type: string
          example: "Postres"
        image:
          type: string
          example: "https://e6r9x5a3.rocketcdn.me/wp-content/uploads/2020/03/1-680x1020.png"

  PopularMainDishes:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 10
        nombre:
          type: string
          example: "Milanesa de pollo"
        precio:
          type: number
          example: 20.50
        description:
          type: string
          example: "Es una milaneza muy buena"
        img:
          type: string
          example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  dessertpopular:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 2
        nombre:
          type: string
          example: "Flan de chocolate"
        precio:
          type: number
          example: 10.50
        description:
          type: string
          example: "Un Flan bañado en chocolate"
        img:
          type: string
          example: "https://gastronomiaycia.republica.com/wp-content/uploads/2018/08/15postres_choco_saludables_-768x559.jpg"
  plate:
    type: array
    items: 
      type: object
      properties:
        plateID:
            type: integer
            example: 10
        nombre:
            type: string
            example: "Milanesa de pollo"
        precio: 
            type: number
            example: 20.50
        description:
            type: string
            example: "Es una milaneza muy buena"
        img:
            type: string
            example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  order:
    type: array
    items: 
      type: object
      properties:
        cantidad: 
          type: integer
          example: 2
        extra:
          type: string
          example: "Una porcion extra de papas"
        nota:
          type: string
          example: "Sin mani"
        plato:
          type: array
          items:
            type: object
            properties:
              plateID:
                type: integer
                example: 10
              nombre:
                type: string
                example: "Milanesa de pollo"
              precio: 
                type: number
                example: 20.50  
              description:
                type: string
                example: "Es una milaneza muy buena"
              img:
                type: string
                example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  OrderList:
    type: array
    items:
      type: object
      properties:
        orderid:
          type: integer
          example: 300
        fecha:
          type: string
          example: "11/05/2022, 15,31"
        total:
          type: number
          example: 150.5
        sucursal:
          type: string
          example: "Sucursal Obrajes"
  Client:
    type: object
    properties:
      id:
        type: integer
        example: 1
      nombre:
        type: string
        example: "Maria Perez"
      telefono:
        type: string
        example: "77777777"
      nit:
        type: string
        example: "12354987-V"
      correo:
        type: string
        example: "mperez@gmail.com"
  Order:
    type: object
    properties:
      id:
        type: integer
        example: 30
      clienteId:
        type: integer
        example: 13
      sucursal:
        type: string
        example: "Sucursal Obrajes"
      fecha:
        type: string
        example: "11/5/2022, 16:35"
      lon:
        type: number
        example: -16.6584
      lat:
        type: number
        example: -66.6584
      metodoPago:
        type: integer
        example: 2
      delivery:
        type: integer
        example: 3
      total:
        type: number
        example: 150
      platos:
        type: array
        items:
          properties:
            id:
              type: integer
              example: 10
            nombre:
              type: number
              example: "Milanesa"
            descripcion:
              type: string
              example: "Algo de texto aqui"
            precio:
              type: number
              example: 30
            cantidad:
              type: integer
              example: 2

  PaymentMethods:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          example: 34
        info:
          type: string
          example: "12341231241"
        venc:
          type: string
          example: "11/22"
  Plate:
    type: object
    properties:
      id:
        type: integer
        example: 10
      nombre:
        type: string
        example: "Milanesa"
      precio:
        type: number
        example: 30
      descripcion:
        type: string
        example: "Rico plato"
      imagen:
        type: string
        example: "img.png"
      categoria:
        type: integer
        example: 1
  Locations:
    type: array
    items: 
      type: object
      properties:
        id: 
          type: integer
          example: 34
        lat: 
          type: number 
          example: -16.65653
        lon: 
          type: number 
          example: -66.65653
        nombre: 
          type: string
          example: "CASITA"