swagger: '2.0'
info:
  title: Delivery API
  description: API para manejar pedidos y entrega de platos de un restaurant
  version: 1.0.0
tags:
  - name: "Menu"
    description: "Visualizacion de categorias y menus"
  - name: "Plato"
    description: "Agregar, eliminar y editar platos"
  - name: "Pedidos"
    description: "todo sobre los pedidos"
  - name: "Cliente"
    description: "Informacion necesaria sobre el cliente"
  - name: "Orden"
    description: "Realizar pedido"
paths:
  "/menu/categories":
    get:
      tags:
        - "Menu"
      summary: "Obtener las categorias del Menu"
      description: "Obtener la lista de categorias que tiene el restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de categorias del restaurante"
          schema:
            $ref: '#/definitions/categories'
        404:
          description: No se encuentra la lista de categorias
      produces:
        - application/json

  "/menu/mainPopular":
    get:
      tags:
        - "Menu"
      summary: "Obtener los platos principales mas populares"
      description: "Obtener una lista de los platos principales populares del restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de platos principales mas populares"
          schema:
            $ref: '#/definitions/PopularMainDishes'
        404:
          description: No se encuentra la lista de platos princiaples populares
      produces:
        - application/json
  "/menu/dessertpopular":
    get:
      tags:
        - "Menu"
      summary: "Obtener los postrs mas populares"
      description: "Obtener una lista de los postres populares del restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de los postres mas populares"
          schema:
            $ref: '#/definitions/dessertpopular'
        404:
          description: No se encuentra la lista de postres populares
      produces:
        - application/json

  "/menu/soups":
    get:
      tags:
        - "Menu"
      summary: "Todas las sopas que ofrece el restaurante"
      description: "Obtener una lista de todas las sopas"
      parameters: []
      responses:
        200:
          description: "Lista de todas las sopa"
          schema:
            $ref: '#/definitions/soups'
        404:
          description: "No se encontro la lista de sopas"
      produces:
        - application/json

  "/menu/maindishes":
    get:
      tags:
        - "Menu"
      summary: "Todos los platos principales que ofrece el restaurante"
      description: "Obtener una lista de todos los platos principales que ofrece el restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de todos los platos"
          schema:
            $ref: '#/definitions/plate'
        404:
          description: "No se encontro la lista de platos principales"
      produces:
        - application/json

  "/menu/desserts":
    get:
      tags:
        - "Menu"
      summary: "Todos los postres que ofrece el restaurante"
      description: "Obtener una lista de todos los postres que ofrece el restaurante"
      parameters: []
      responses:
        200:
          description: "Lista de todos los platos"
          schema:
            $ref: '#/definitions/dessertpopular'
        404:
          description: "No se encontro la lista de sopas"
      produces:
        - application/json

  "/menu/{plateId}":
    get:
      tags:
        - "Menu"
      summary: "Obtener la informacion de un plato"
      description: "Obtener la informacion de un plato"
      parameters:
        - name: plateId
          in: path
          description: "Obtener datos de un plato"
          required: true
          type: string
      responses:
        200:
          description: "Informacion del plato"
          schema:
            $ref: '#/definitions/dessertpopular'
        404:
          description: "No se encontro la informacion del plato"
      produces:
        - application/json


  "/plato/{plateId}":
    get:
      tags:
        - "Orden"
      summary: "Obtener la informacion del plato"
      description: "Obtener la informacion del plato selecionado"
      parameters:
        - name: plateId
          in: path
          description: "Obtener datos del plato"
          required: true
          type: string
      responses:
        200:
          schema:
            $ref: '#/definitions/plate'
          description: "Informacion del Plato"
        404:
          description: "No se encuentra el plato"
      produces:
        - application/json
  "/order/{clientId}/Order":
    post:
      tags:
        - "Orden"
      summary: "Enviar la orden al listado"
      description: "Enviar la orden al listado"
      parameters:
        - name: clientId
          in: path
          description: Referencia de cliente
          required: true
          type: string
        - name: body
          in: body
          schema:
            $ref: '#/definitions/order'
      responses:
        200:
          description: Se envio la orden
        400:
          description: Error al enviar la orden
      produces:
        - application/json

  /orders:
    post:
      tags:
        - "Pedidos"
      summary: Crea un nuevo pedido
      description: |
        Crea en nuevo pedido
      parameters:
        - name: body
          in: body
          description: "Pedido que se a√±adira al servicio"
          required: true
          schema:
            $ref: '#/definitions/OrderPost'
      responses:
        201:
          description: Se creo el nuevo pedido satisfactoriamente
        400:
          description: Error al crear el nuevo pedido
        
        
      produces:
        - application/json
      consumes:
        - application/json
  
  /orders {?estado}:
    get:
      tags:
        - "Pedidos"
      summary: Obtiene los pedidos con estado pendiente
      description: |
        Obtener la informacion de un pedido por el estado
      parameters:
        - name: estado
          in: query
          required: true
          type: string
      responses:
        200:
          description: Informacion del pedido
          schema:
            $ref: '#/definitions/Order'
        404:
          description: No se encontro el pedido
        ### Informacion de un pedido

  /client/{clientId}/orders:

    ### Informacion del usuario
    get:
      tags:
        - "Cliente"
      summary: Obtener pedidos del cliente
      description: |
        Obtener la lista de pedidos hechos por el cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
      responses:
        200:
          description: Lista de pedidos
          schema:
            $ref: '#/definitions/OrderList'
        404:
          description: El usuario no tiene pedidos anteriores
      produces:
        - application/json

  /orders/{orderId}:
    get:
      tags:
        - "Pedidos"
      summary: Obtener pedido por id
      description: |
        Obtener la informacion de un pedido por el id
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Informacion del pedido
          schema:
            $ref: '#/definitions/Order'
        404:
          description: No se encontro el pedido
        ### Informacion de un pedido
    put:
      tags:
        - "Pedidos"
      summary: actualizar el estado por Id
      description: |
        Actualizar el estado de un pedido por el id
      parameters:
        - name: orderId
          in: path
          description: Referencia al plato
          required: true
          type: string
        - name: body
          in: body
          description: En body se envia la informacion
          schema:
            $ref: '#/definitions/Order'
          required: true
      responses:
        200:
          description: El pedido fue enviado
        404:
          description: Error al actualizar el estado del pedido
      consumes:
        - application/json


  /client/{clientId}:
    put:
      tags:
        - "Cliente"
      summary: Actualizar informacion del cliente
      description: |
        Actualiza la informacion del cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
        - name: body
          in: body
          description: En body se envia la informacion
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        200:
          description: Se guardaron satisfactoriamente los cambios
        400:
          description: Error al actualizar la informacion
        404:
          description: No se encontro al usuario
      consumes:
        - application/json

    get:
      responses:
        200:
          description: Se Obtienen datos del cliente
          schema:
            $ref: '#/definitions/Client'
        400:
          description: Error al obtener datos
        404:
          description: Cliente no encontrado
      tags:
        - "Cliente"
      summary: Obtener informacion del cliente
      description: |
        Actualiza la informacion del cliente
      parameters:
        - name: clientId
          in: path
          description: Referencia de usuario
          required: true
          type: string
  
  /client/{clientId}/payments:
    get:
      tags:
        - "Cliente"
      summary: Obtiene datos de la ultima tarjeta usada por el cliente
      description: |
        Obtiene datos de la ultima tarjeta usada por el cleiente
      parameters:
        - name: clientId
          in: path
          description: Referencia al usuario
          required: true
          type: integer
      responses:
        200:
          description: Metodo de pago
          schema:
            $ref: '#/definitions/Payment'
        400:
          description: Error al obtener metodo de pago
        404:
          description: No se encontraron metodo de pago
    post:
      tags:
        - "Cliente"
      summary: Guardar la informacion de pago de un usuario
      description: |
        Guarda informacion del pago 
      parameters:
        - name: clientId
          in: path
          description: "Referencia al usuario"
          required: true
          type: integer
        - name: body
          in: body
          description: "Informacion del metodo de pago"
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        200:
          description: Se guardaron los datos correctamente
        400:
          description: Error al guardar los datos
      produces:
        - application/json
      consumes:
        - application/json
  /plate:

    post:
      tags:
        - "Plato"

      summary: Crea un nuevo plato
      description: |
        Crea en nuevo pedido
      parameters:
        - name: body
          in: body
          description: "Plato que se a√±adira al manu"
          required: true
          schema:
            $ref: '#/definitions/Plate'
      responses:
        200:
          description: Se creo el nuevo plato satisfactoriamente
        400:
          description: Error al crear el nuevo plato
      produces:
        - application/json
      consumes:
        - application/json

  /plate/{plateId}:

    get:
      tags:
        - "Plato"
      summary: Obtener la informacion del plato
      description: |
        Obtiene todos los datos registrados del plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
      responses:
        200:
          description: Informacion del plato
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Error al obtener la informacion del plato
        404:
          description: No se encontraron datos del plato

    put:
      tags:
        - "Plato"
      summary: Actualizar informacion del plato
      description: |
        Actualiza los datos del plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
        - name: body
          in: body
          description: En body se envia la informacion
          schema:
            $ref: '#/definitions/Plate'
          required: true
      responses:
        200:
          description: Se guardaron satisfactoriamente los cambios
        400:
          description: Error al actualizar la informacion del plato
      consumes:
        - application/json

    delete:
      tags:
        - "Plato"
      summary: Eliminar plato
      description: |
        Elimina el plato
      parameters:
        - name: plateId
          in: path
          description: Referencia al plato
          required: true
          type: integer
        - name: body
          in: body
          description: En body se envia la informacion
          schema:
            $ref: '#/definitions/Plate'
          required: true
      responses:
        200:
          description: Se elimino con exito
        400:
          description: Error al eliminar el plato
      consumes:
        - application/json

  /plate {?category}{&status}:

    get:
      tags:
        - "Plato"
      summary: Obtener una lista por categoria y con status 1 ;
      description: |
        Obtiene todos los datos registrados del plato por categoria y con status 1
      parameters:
        - name: category
          in: query
          description: Referencia a la categoria
          required: true
          type: string
        - name: status
          in: query
          description: Referencia al estado del plato
          required: true
          type: integer
      responses:
        200:
          description: Informacion de los platos
          schema:
            $ref: '#/definitions/Plate'
        400:
          description: Error al obtener la informacion
        404:
          description: No se encontraron datos 


  "/sucursal/":
    get:
      tags:
        - "Sucursal"
      summary: "Todos los datos de las sucursales"
      description: "Obtener datos sobre las sucursales"
      parameters: []
      responses:
        200:
          description: "Lista de todas las sucursales"
          schema:
            $ref: '#/definitions/sucursal'
        404:
          description: "No se encontro la lista de sucursales"
      produces:
        - application/json


  "/sucursal/{sucursalID}":
    get:
      tags:
        - "Sucursal"
      summary: "Obtener la informacion de una sucursal"
      description: "Obtener la informacion de una sucursal"
      parameters:
        - name: sucursalID
          in: path
          description: "Obtener datos de una sucursal"
          required: true
          type: string
      responses:
        200:
          description: "Informacion de una sucursal"
          schema:
            $ref: '#/definitions/sucursalData'
        404:
          description: "No se encontro la informacion del plato"
      produces:
        - application/json
  "/sucursal":
    post:
      tags:
        - "Sucursal"
      summary: Crea una nueva sucursal
      description: |
        Crea una nueva sucursal
      parameters:
        - name: body
          in: body
          description: "Se a√±adira a las sucursales"
          required: true
          schema:
            $ref: '#/definitions/sucursalData'
      responses:
        200:
          description: Se creo una nueva sucursal
        400:
          description: Error al crear una nueva sucursal
      produces:
        - application/json
      consumes:
        - application/json



definitions:

  sucursalData:
    type: object
    properties:
      sucursalID:
        type: integer
        example: 1
      nombre:
        type: string
        example: "Sucursal central"
      direccion:
        type: string
        example: "Av X zona X"
      encargado:
        type: string
        example: "Roberto Aguilar"

  sucursal:
    type: array
    items:
      type: object
      properties:
        sucursalID:
          type: integer
          example: 4
        nombre:
          type: string
          example: "sucursal 3"
        direccion:
          type: string
          example: "Zona calacoto clle 2"
        encargado:
          type: string
          example: "Jose Conde"
  soups:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 10
        nombre:
          type: string
          example: "sopa de pollo"
        precio:
          type: number
          example: 20.50
        description:
          type: string
          example: "Es una sopa bien buena"
        img:
          type: string
          example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"

  categories:
    type: array
    items:
      type: object
      properties:
        categoriesId:
          type: integer
          example: 3
        name:
          type: string
          example: "Postres"
        image:
          type: string
          example: "https://e6r9x5a3.rocketcdn.me/wp-content/uploads/2020/03/1-680x1020.png"

  PopularMainDishes:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 10
        nombre:
          type: string
          example: "Milanesa de pollo"
        precio:
          type: number
          example: 20.50
        description:
          type: string
          example: "Es una milaneza muy buena"
        img:
          type: string
          example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  dessertpopular:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 2
        nombre:
          type: string
          example: "Flan de chocolate"
        precio:
          type: number
          example: 10.50
        description:
          type: string
          example: "Un Flan ba√±ado en chocolate"
        img:
          type: string
          example: "https://gastronomiaycia.republica.com/wp-content/uploads/2018/08/15postres_choco_saludables_-768x559.jpg"
  plate:
    type: array
    items:
      type: object
      properties:
        plateID:
          type: integer
          example: 10
        nombre:
          type: string
          example: "Milanesa de pollo"
        precio:
          type: number
          example: 20.50
        description:
          type: string
          example: "Es una milaneza muy buena"
        img:
          type: string
          example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  order:
    type: array
    items:
      type: object
      properties:
        cantidad:
          type: integer
          example: 2
        extra:
          type: string
          example: "Una porcion extra de papas"
        nota:
          type: string
          example: "Sin mani"
        plato:
          type: array
          items:
            type: object
            properties:
              plateID:
                type: integer
                example: 10
              nombre:
                type: string
                example: "Milanesa de pollo"
              precio:
                type: number
                example: 20.50
              description:
                type: string
                example: "Es una milaneza muy buena"
              img:
                type: string
                example: "https://cdn.recetas360.com/wp-content/uploads/2019/07/Milanesas-de-pollo-al-horno.jpg"
  OrderList:
    type: array
    items:
      type: object
      properties:
        orderid:
          type: integer
          example: 300
        fecha:
          type: string
          example: "11/05/2022, 15,31"
        total:
          type: number
          example: 150.5
        sucursal:
          type: string
          example: "Sucursal Obrajes"
        delivery: 
          type: string 
          example: "Recojo en local"
        pago:
          type: string
          enum: ["Efectivo", "Tarjeta" , "Qr"]
          example: "Efectivo"  
        
  Client:
    type: object
    properties:
      id:
        type: integer
        example: 1
      nombre:
        type: string
        example: "Maria Perez"
      telefono:
        type: string
        example: "77777777"
      nit:
        type: string
        example: "12354987-V"
      correo:
        type: string
        example: "mperez@gmail.com"
      imagen: 
        type: string
        example: "http://url_de_imagen.jpg"
    
  
  OrderPost:
    type: object
    properties:
      id:
        type: integer
        example: 30
      clienteId:
        type: integer
        example: 13
      sucursal:
        type: string
        example: "Sucursal Obrajes"
      fecha:
        type: string
        example: "11/5/2022, 16:35"
      direccion:
        type: object
        properties:
          id:
            type: integer
            example: 11
          direccion: 
            type: string
            example: "Av 20 de octubre #1540"
          lon:
            type: number
            example: -16.6584
          lat:
            type: number
            example: -66.6584
          detalle: 
            type: string
            example: "Casa naranja"
      metodoPago:
        type: string
        enum: ["Efectivo","Tarjeta","Qr"]
        example: "Efectivo"
      delivery:
        type: string
        enum: ["Delivery" , "Entrega en local"]
        example: "Delivery"
      estado:
        type: string
        enum: ["Enviado","Aprobado","Rechazado","En camino","Entregado"]
        example: "Enviado"
      total:
        type: number
        example: 150.00
      platos:
        type: array
        items:
          properties:
            id:
              type: integer
              example: 10

            cantidad:
              type: integer
              example: 2
            nota: 
              type: string 
              example: "sin pollo"

  Order:
    type: object
    properties:
      id:
        type: integer
        example: 30
      clienteId:
        type: integer
        example: 13
      sucursal:
        type: string
        example: "Sucursal Obrajes"
      fecha:
        type: string
        example: "11/5/2022, 16:35"
      direccion:
        type: object
        properties:
          id:
            type: integer
            example: 11
          direccion: 
            type: string
            example: "Av 20 de octubre #1540"
          lon:
            type: number
            example: -16.6584
          lat:
            type: number
            example: -66.6584
          detalle: 
            type: string
            example: "Casa naranja"
      metodoPago:
        type: string
        enum: ["Efectivo","Tarjeta","Qr"]
        example: "Efectivo"
      delivery:
        type: string
        enum: ["Delivery" , "Entrega en local"]
        example: "Delivery"
      estado:
        type: string
        enum: ["Enviado","Aprobado","Rechazado","En camino","Entregado"]
        example: "Enviado"
      total:
        type: number
        example: 150.00
      platos:
        type: array
        items:
          properties:
            id:
              type: integer
              example: 10
            nombre:
              type: number
              example: "Milanesa"
            descripcion:
              type: string
              example: "Algo de texto aqui"
            precio:
              type: number
              example: 30
            cantidad:
              type: integer
              example: 2
            nota: 
              type: string 
              example: "sin pollo"
            img: 
              type: string
              example: "http://img_dela_mila.jpg"

  Plate:
    type: object
    properties:
      id:
        type: integer
        example: 10
      nombre:
        type: string
        example: "Milanesa"
      precio:
        type: number
        example: 30
      descripcion:
        type: string
        example: "Rico plato"
      imagen:
        type: string
        example: "img.png"
      categoria:
        type: string
        example: "Plato principal"
  Payment:
    type: object
    properties:
      id: 
        type: integer
        example: 2
      nro: 
        type: number
        example: 1451320987987
      venc: 
        type: string
        example: "11/22"
      nombre: 
        type: string
        example: "Pepe el mago"